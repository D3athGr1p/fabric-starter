apiVersion: v1
kind: Service
metadata:
  name: peer0
  labels:
    app: {{ .Chart.Name }}
spec:
  ports:
    - port: {{ .Values.PEER0_PORT }}
      targetPort: {{ .Values.PEER0_PORT }}
      protocol: TCP
  clusterIP: None
  selector:
    app:  {{ .Chart.Name }}
---
apiVersion: v1
kind: Service
metadata:
  name: ca
  labels:
    app: {{ .Chart.Name }}
spec:
  ports:
    - port: 7054
      targetPort: 7054
      protocol: TCP
  clusterIP: None
  selector:
    app:  {{ .Chart.Name }}

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Chart.Name }}
  labels:
    app: {{ .Chart.Name }}
spec:
  serviceName: peer0
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:


      volumes:
        - name: crypto-config
          emptyDir: {}
#          hostPath:
#            path: crypto-config
#            type: Directory
        - name: docker-socket
          hostPath:
            path:  /var/run/docker.sock
            type: Socket


      initContainers:
        - name: pre-install #.$(PEER_NAME:-peer0).$(ORG:-org1).$(DOMAIN:-example.com)
          image: docker.io/olegabu/fabric-tools-extended:baas-deploy
          env:
            - name: ORG
              value: {{ .Values.ORG }}
            - name: DOMAIN
              value: {{ .Values.DOMAIN }}
          workingDir: /etc/hyperledger
          command: ["sh", "-c", "tree crypto-config; container-scripts/container-peer.sh"]
          volumeMounts:
            - mountPath: /etc/hyperledger/crypto-config
              name: crypto-config

      containers:
#        - name: ca.${ORG:-org1}.${DOMAIN:-example.com}
        - name: ca
#          image: ${DOCKER_REGISTRY:-docker.io}/hyperledger/fabric-ca:${FABRIC_VERSION:-1.4.8}
          image: hyperledger/fabric-ca:1.4.8
          env:
            - name: FABRIC_CA_HOME
              value: /etc/hyperledger/fabric-ca-server/ca
            - name: FABRIC_CA_SERVER_LDAP_USERFILTER
              value: (cn=%s)
            - name: FABRIC_CA_SERVER_CA_CERTFILE
              value: /etc/hyperledger/crypto-config/peerOrganizations/{{ .Values.ORG }}.{{ .Values.DOMAIN }}/ca/ca.{{ .Values.ORG }}.{{ .Values.DOMAIN }}-cert.pem
            - name: FABRIC_CA_SERVER_CA_KEYFILE
              value: /etc/hyperledger/crypto-config/peerOrganizations/{{ .Values.ORG }}.{{ .Values.DOMAIN }}/ca/sk.pem
            - name: FABRIC_CA_SERVER_TLS_ENABLED
              value: "true"
            - name: FABRIC_CA_SERVER_TLS_CERTFILE
              value: /etc/hyperledger/crypto-config/peerOrganizations/{{ .Values.ORG }}.{{ .Values.DOMAIN }}/tlsca/tlsca.{{ .Values.ORG }}.{{ .Values.DOMAIN }}-cert.pem
            - name: FABRIC_CA_SERVER_TLS_KEYFILE
              value: /etc/hyperledger/crypto-config/peerOrganizations/{{ .Values.ORG }}.{{ .Values.DOMAIN }}/tlsca/sk.pem
            - name: ENROLL_ID
              value: admin
            - name: ENROLL_SECRET
              value: {{ .Values.ENROLL_SECRET }}
          volumeMounts:
            - mountPath: /etc/hyperledger/crypto-config
              name: crypto-config
            - mountPath: /etc/hyperledger/fabric-ca-server/ca/fabric-ca-server-config-{{ .Values.ORG }}.yaml
              subPath: ca/fabric-ca-server-config-{{ .Values.ORG }}.yaml
              name: crypto-config
          command: ["sh", "-c", "sleep 2; ls /etc/hyperledger/fabric-ca-server/ca/msp/keystore/ -l --time-style=full; fabric-ca-server start -b ${ENROLL_ID}:${ENROLL_SECRET} -d --ca.name=default"]


        - name: peer
          image: hyperledger/fabric-peer:1.4.8
          workingDir: /opt/gopath/src/github.com/hyperledger/fabric/peer
          command: ["sh", "-c", "printenv|sort"]
          env:
            - name: CORE_PEER_ID
              value: {{ .Values.PEER_NAME }}.{{ .Values.ORG }}.{{ .Values.DOMAIN }}
            - name: CORE_PEER_LOCALMSPID
              value: {{ .Values.ORG }}
            - name: CLUSTER_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CORE_PEER_ADDRESS
#              value: {{ .Values.PEER_NAME }}.{{ .Values.ORG }}.{{ .Values.DOMAIN }}:{{ .Values.PEER0_PORT }}
              value: {{ .Values.PEER_NAME }}.$(CLUSTER_NAMESPACE).{{ .Values.clusterDomain }}:{{ .Values.PEER0_PORT }}
            - name: CORE_PEER_LISTENADDRESS
              value: 0.0.0.0:{{ .Values.PEER0_PORT }}
            - name: CORE_VM_ENDPOINT
              value: unix:///host/var/run/docker.sock
            - name: CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE
              value: fabric-starter_default
            - name: CORE_VM_DOCKER_ATTACHSTDOUT
              value: "true"

            - name: CORE_PEER_GOSSIP_EXTERNALENDPOINT
              value: {{ .Values.PEER_NAME }}.{{ .Values.ORG }}.{{ .Values.DOMAIN }}:{{ .Values.PEER0_PORT }}

            - name: CORE_PEER_MSPCONFIGPATH
              value: /etc/hyperledger/crypto/peer/msp
            - name: CORE_PEER_TLS_ENABLED
              value: "true"
            - name: CORE_PEER_TLS_KEY_FILE
              value: /etc/hyperledger/crypto/peer/tls/server.key
            - name: CORE_PEER_TLS_CERT_FILE
              value: /etc/hyperledger/crypto/peer/tls/server.crt
            - name: CORE_PEER_TLS_ROOTCERT_FILE
              value: /etc/hyperledger/crypto/peer/tls/ca.crt
          volumeMounts:
            - name: crypto-config
              subPath: peerOrganizations/{{ .Values.ORG }}.{{ .Values.DOMAIN }}/peers/{{ .Values.PEER_NAME }}.{{ .Values.ORG }}.{{ .Values.DOMAIN }}
              mountPath: /etc/hyperledger/crypto/peer
            - name: docker-socket
              mountPath: /host/var/run/docker.sock

#            - peer:/var/hyperledger/production
#            - ${FABRIC_STARTER_HOME:-.}/crypto-config/hosts:/etc/hosts



