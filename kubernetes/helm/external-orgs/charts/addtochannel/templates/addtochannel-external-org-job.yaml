apiVersion: batch/v1
kind: Job
metadata:
  name: integrate-{{ .Values.peer.newOrg }}-{{ .Values.peer.newOrgPeerName }}-job
spec:
  parallelism: 1
  completions: 1
  template:
    spec:
      containers:
        - name: add-to-channel-job
          image: >-
            {{ tpl .Values.images.fabric_tools_extended . }}
          env:
            - name: REST_API_URL
              value: "{{ default "http://rest-api:4000" .Values.REST_API_URL }}"

            - name: NEW_ORG_PEER_NAME
              value: {{ .Values.peer.newOrgPeerName }}
            - name: NEW_ORG
              value: {{ required "New Org name is required" .Values.peer.newOrg }}
            - name: NEW_ORG_DOMAIN
              value: {{ required "New Org domain is requried" .Values.peer.newOrgDomain }}
            - name: NEW_ORG_IP
              value: "{{ required "New Org Ip is required" .Values.peer.newOrgIp }}"
            - name: NEW_PEER_PORT
              value: "{{ .Values.peer.newPeerPort }}"
            - name: NEW_ORG_WWWPORT
              value: "{{ .Values.peer.newOrgWwwPort }}"

            - name: CHANNEL
              value: "{{ .Values.channel.name }}"

            - name: ENROLL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: enroll-password-secret
                  key: password

          workingDir: /tmp
          command:
            - /bin/sh
            - -c
            - |
              set -x;

              JWT=`(curl -k -d "{\"username\":\"admin\",\"password\":\"${ENROLL_PASSWORD}\"}" \
              ${REST_API_URL}/users | tr -d '"')` \
              -H "Content-Type: application/json"

              &&

              curl -i --connect-timeout 30 --max-time 120 --retry 0 -k ${REST_API_URL}/channels/${CHANNEL}/orgs \
              -H "Authorization: Bearer $JWT" \
              -F peerName="${NEW_ORG_PEER_NAME}"  -F orgId="${NEW_ORG}" -F domain="${NEW_ORG_DOMAIN}" -F orgIp="${NEW_ORG_IP}" -F peerPort="${NEW_PEER_PORT}" -F wwwPort="${NEW_ORG_WWWPORT}"


      restartPolicy: Never
